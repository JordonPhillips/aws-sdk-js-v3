import { _UnmarshalledParameterConstraints } from "./_ParameterConstraints";
import * as __aws_sdk_types from "@aws-sdk/types";

/**
 * GetRouteOutput shape
 */
export interface GetRouteOutput extends __aws_sdk_types.MetadataBearer {
  /**
   * <p>Specifies whether an API key is required for this route.</p>
   */
  ApiKeyRequired?: boolean;

  /**
   * <p>A list of authorization scopes configured on a route. The scopes are used with a
   *  COGNITO_USER_POOLS authorizer to authorize the method invocation. The authorization
   *  works by matching the route scopes against the scopes parsed from the access token in
   *  the incoming request. The method invocation is authorized if any route scope matches
   *  a claimed scope in the access token. Otherwise, the invocation is not authorized.
   *  When the route scope is configured, the client must provide an access token instead
   *  of an identity token for authorization purposes.</p>
   */
  AuthorizationScopes?: Array<string>;

  /**
   * <p>The authorization type for the route. Valid values are NONE for open
   *  access, AWS_IAM for using AWS IAM permissions, and CUSTOM
   *  for using a Lambda
   *  authorizer</p>
   */
  AuthorizationType?: "NONE" | "AWS_IAM" | "CUSTOM" | string;

  /**
   * <p>The identifier of the Authorizer resource to be associated with this
   *  route, if the authorizationType is CUSTOM
   *  . The authorizer identifier is generated by API Gateway
   *  when you created the authorizer.</p>
   */
  AuthorizerId?: string;

  /**
   * <p>The model selection expression for the route.</p>
   */
  ModelSelectionExpression?: string;

  /**
   * <p>The operation name for the route.</p>
   */
  OperationName?: string;

  /**
   * <p>The request models for the route.</p>
   */
  RequestModels?: { [key: string]: string };

  /**
   * <p>The request parameters for the route.</p>
   */
  RequestParameters?: { [key: string]: _UnmarshalledParameterConstraints };

  /**
   * <p>The route ID.</p>
   */
  RouteId?: string;

  /**
   * <p>The route key for the route.</p>
   */
  RouteKey?: string;

  /**
   * <p>The route response selection expression for the route.</p>
   */
  RouteResponseSelectionExpression?: string;

  /**
   * <p>The target for the route.</p>
   */
  Target?: string;

  /**
   * Metadata about the response received, including the HTTP status code, HTTP headers, and any request identifiers recognized by the SDK.
   */
  $metadata: __aws_sdk_types.ResponseMetadata;
}
